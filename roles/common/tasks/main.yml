# Set of tasks to apply to all hosts

- name: Set /etc/hostname to {{ inventory_hostname }}
  template: src='hostname.j2' dest='/etc/hostname'

#- debug: msg="Trace hostname ; var={{ inventory_hostname }}"

- name: Add hostname in /etc/hosts
  lineinfile:
    path: /etc/hosts
    line: "{{ ansible_default_ipv4.address }} {{ inventory_hostname }}" 

# Directory for keeping misc ansible files
- name: Create managed files dir
  file: name={{ managed_file_dir }} state=directory

- name: Set /etc/localtime
  file: src=/usr/share/zoneinfo/{{ timezone }}  dest=/etc/localtime state=link force=yes

- name: Set /etc/timezone
  copy: content="{{ timezone }}" dest=/etc/timezone

- name: Install ntp, iptables-persistent, rsyslog
  apt: name={{item}} state=present
  with_items:
  - ntp
  - iptables-persistent
  - rsyslog

- name: Put iptables configuration
  template: src={{ inventory_dir }}/templates/common/{{item}}.j2 dest=/etc/iptables/{{ item }}
  with_items:
    - rules.v4
    - rules.v6
  notify:
  - restart netfilter-persistent

- name: Enable services ntpd, iptables-persistent on boot
  service: name={{item}} enabled=true
  with_items:
  - ntp
  - netfilter-persistent

- name: Add sympa group
  group: name=sympa

- name: Make sure we have a 'wheel' group
  group:
    name: wheel
    state: present

- name: Allow 'wheel' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: Add user accounts
  user:
    name: "{{item.name}}"
    group: "{{item.group}}"
    password: "{{item.password}}"
  with_items: "{{ users }}"

- name: Add sudoers users to wheel group
  user:
    name: "{{item.name}}"
    groups: wheel
    append: yes
  with_items: "{{ users }}"

- name: Ensure all users have a .ssh directory
  file:
    state: directory
    owner: "{{item.name}}"
    name: "/home/{{item.name}}/.ssh"
  with_items: "{{ users }}"

- name: Ensure all users have an authorized_keys file
  file:
    state: touch
    owner: "{{item.name}}"
    path: "/home/{{item.name}}/.ssh/authorized_keys"
  with_items: "{{ users }}"

- name: If needed, add the public keys to the relevant authorized_keys files.
  lineinfile:
    path: "/home/{{item.user}}/.ssh/authorized_keys"
    line: "{{item.public_key}}"
  with_items: "{{ public_keys }}"
  when: public_keys is defined

# Include environment specific tasks
- include_tasks: "{{ inventory_dir }}/tasks/common.yml"
